
# Generated by CodiumAI

from models.model_requirement import ModelRequirement

import pytest

class TestModelRequirement:

    #  ModelRequirement object can be instantiated successfully.
    def test_instantiation_success(self):
        model_req = ModelRequirement()
        configurations_dict = {
            "environment": "test",
            "log_file": "test.log",
            "name": "REQ0001_1",
            "secret_key": "123456",
            "version": "1.0"
        }
        model_req.initialize(configurations=configurations_dict,
                             environment=configurations_dict["environment"],
                             log_file=configurations_dict["log_file"],
                             name=configurations_dict["name"],
                             secret_key=configurations_dict["secret_key"],
                             version=configurations_dict["version"])
        assert isinstance(model_req, ModelRequirement)

    #  ModelRequirement's configurations, environment, log_file, name, secret_key, and version can be set successfully using the initialize method.
    def test_initialize_success(self):
        model_req = ModelRequirement()
        configurations_dict = {
            "environment": "test",
            "log_file": "test.log",
            "name": "REQ0001_1",
            "secret_key": "123456",
            "version": "1.0"
        }
        model_req.initialize(configurations=configurations_dict,
                             environment=configurations_dict["environment"],
                             log_file=configurations_dict["log_file"],
                             name=configurations_dict["name"],
                             secret_key=configurations_dict["secret_key"],
                             version=configurations_dict["version"])
        assert model_req.get_configurations() == configurations_dict
        assert model_req.get_environment() == configurations_dict["environment"]
        assert model_req.get_log_file() == configurations_dict["log_file"]
        assert model_req.get_name() == configurations_dict["name"]
        assert model_req.get_secret_key() == configurations_dict["secret_key"]
        assert model_req.get_version() == configurations_dict["version"]

    #  ModelRequirement's initialize method raises an exception if configurations is invalid.
    def test_initialize_invalid_configurations(self):
        model_req = ModelRequirement()
        configurations_dict = None
        with pytest.raises(Exception):
            model_req.initialize(configurations=configurations_dict,
                                 environment="test",
                                 log_file="test.log",
                                 name="REQ0001_1",
                                 secret_key="123456",
                                 version="1.0")

    #  ModelRequirement's initialize method raises an exception if environment is invalid.
    def test_initialize_invalid_environment(self):
        model_req = ModelRequirement()
        configurations_dict = {
            "environment": "test",
            "log_file": "test.log",
            "name": "REQ0001_1",
            "secret_key": "123456",
            "version": "1.0"
        }
        with pytest.raises(Exception):
            model_req.initialize(configurations=configurations_dict,
                                 environment=None,
                                 log_file="test.log",
                                 name="REQ0001_1",
                                 secret_key="123456",
                                 version="1.0")

    #  ModelRequirement's initialize method raises an exception if log_file is invalid.
    def test_initialize_invalid_log_file(self):
        model_req = ModelRequirement()
        configurations_dict = {
            "environment": "test",
            "log_file": "test.log",
            "name": "REQ0001_1",
            "secret_key": "123456",
            "version": "1.0"
        }
        with pytest.raises(Exception):
            model_req.initialize(configurations=configurations_dict,
                                 environment="test",
                                 log_file=None,
                                 name="REQ0001_1",
                                 secret_key="123456",
                                 version="1.0")
